#!/usr/bin/env python3
"""
Script d'initialisation de la base de donn√©es MongoDB
Cr√©√© automatiquement le compte admin et configure les index
"""

import os
import sys
from dotenv import load_dotenv

# Charger les variables d'environnement
load_dotenv()

def init_database():
    """Initialiser la base de donn√©es MongoDB"""
    try:
        from database import DatabaseService
        from models import User
        
        print("üîß Initialisation de la base de donn√©es MongoDB...")
        
        # Cr√©er le service de base de donn√©es
        db_service = DatabaseService()
        
        print("‚úÖ Base de donn√©es initialis√©e avec succ√®s!")
        print("üìä Statistiques:")
        
        # Compter les utilisateurs
        users = db_service.get_all_users()
        print(f"   - Utilisateurs: {len(users)}")
        
        # Compter les diagnostics
        diagnoses = db_service.get_all_diagnoses()
        print(f"   - Diagnostics: {len(diagnoses)}")
        
        # Afficher les utilisateurs existants
        if users:
            print("\nüë• Utilisateurs existants:")
            for user in users:
                status = "‚úÖ Actif" if user.is_active else "‚ùå Inactif"
                print(f"   - {user.username} ({user.email}) - {user.role} - {status}")
        
        print("\nüéâ Initialisation termin√©e!")
        print("\nüìù Informations de connexion:")
        print(f"   - URI MongoDB: {os.getenv('MONGO_URI', 'mongodb://localhost:27017/')}")
        print(f"   - Base de donn√©es: {os.getenv('MONGO_DB_NAME', 'medical_diagnosis')}")
        print(f"   - Admin par d√©faut: {os.getenv('ADMIN_USERNAME', 'admin')}")
        print(f"   - Mot de passe admin: {os.getenv('ADMIN_PASSWORD', 'admin123')}")
        
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur lors de l'initialisation: {e}")
        return False

def check_mongodb_connection():
    """V√©rifier la connexion MongoDB"""
    try:
        from pymongo import MongoClient
        
        mongo_uri = os.getenv('MONGO_URI', 'mongodb://localhost:27017/')
        client = MongoClient(mongo_uri, serverSelectionTimeoutMS=5000)
        
        # Tester la connexion
        client.admin.command('ping')
        print("‚úÖ Connexion MongoDB r√©ussie!")
        client.close()
        return True
        
    except Exception as e:
        print(f"‚ùå Erreur de connexion MongoDB: {e}")
        print("\nüîß Solutions possibles:")
        print("   1. V√©rifiez que MongoDB est install√© et en cours d'ex√©cution")
        print("   2. V√©rifiez l'URI MongoDB dans votre fichier .env")
        print("   3. Si vous utilisez MongoDB Atlas, v√©rifiez votre cl√© de connexion")
        return False

def main():
    """Fonction principale"""
    print("üöÄ Initialisation de Medical Diagnosis AI")
    print("=" * 50)
    
    # V√©rifier la connexion MongoDB
    if not check_mongodb_connection():
        sys.exit(1)
    
    # Initialiser la base de donn√©es
    if not init_database():
        sys.exit(1)
    
    print("\nüéØ Prochaines √©tapes:")
    print("   1. Lancez l'application: python app.py")
    print("   2. Connectez-vous avec le compte admin")
    print("   3. Cr√©ez des utilisateurs suppl√©mentaires via l'interface d'administration")
    print("   4. Configurez vos cl√©s API dans le fichier .env")

if __name__ == "__main__":
    main() 